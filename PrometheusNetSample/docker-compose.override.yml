version: '3.4'

services:
  #cadvisor:
  #  image: gcr.io/cadvisor/cadvisor:v0.47.1
  #  restart: unless-stopped
  #  tty: true
  #  user: root
  #  privileged: true
  #  command:
  #  #- "--enable_metrics=tcp,advtcp,network"
  #  - "--store_container_labels=false"
  #  - "--docker_only=true"
  #  stdin_open: true
  #  volumes:
  #      - /:/rootfs:ro
  #      - /var/run:/var/run:ro
  #      - /sys:/sys:ro
  #      - /var/lib/docker/:/var/lib/docker:ro
  #      - /dev/disk/:/dev/disk:ro
  #  ports:
  #    - "8080:8080" 

    #networks:
    #  - myNetwork
  mynginx:
    image: nginx
    ports:
      - "80:80"
  mytoxiproxy:
    image: shopify/toxiproxy
    ports:
      - "8474:8474"
      - "22220:22220"
  mytoxiproxy-configurer:
    build: 
      context: .
      dockerfile: Dockerfile-toxiproxy-configurer
    depends_on:
      - mytoxiproxy

  prometheusnetsample.webapi:
    environment:    
      - ASPNETCORE_ENVIRONMENT=Production
    ports:  
      - "62939:80"
    #networks:
    #- myNetwork
    #labels:
    #    "com.docker-tc.enabled": "1"
    #    "com.docker-tc.delay": "10000ms"
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 500M
        reservations:
          cpus: '0.25'
          memory: 250M
    x-develop:
        watch:
        - action: rebuild
          path: './PrometheusNetSample.WebApi'

  prometheus:       
    image: prom/prometheus:latest
    container_name: prometheusnetsample_prometheus
    user: root
    restart: unless-stopped
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,briangann-gauge-panel,natel-plotly-panel,grafana-simple-json-datasource"
      GF_SERVER_HTTP_PORT: 4000
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    volumes:
      - ./data/prometheus/config:/etc/prometheus/
      - ./data/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    ports:
      - 9090:9090
    #networks:
    #  - myNetwork
  grafana:
    image: grafana/grafana:latest
    ports:
     - 3000:3000
    container_name: prometheusnetsample_grafana
    restart: unless-stopped
    user: root
    links:
      - prometheus:prometheus
    volumes:
      - ./data/grafana:/var/lib/grafana
    depends_on:
      - prometheus
    #networks:
    #- myNetwork
  #mytoxiproxy-configurer:
  #  build: 
  #    context: .
  #    dockerfile: PrometheusNetSample.WebApi/Dockerfile-toxiproxy-configurer
  #  depends_on:
  #    - mytoxiproxy

  #  networks:
  #  - myNetwork

  #vaurien-http:
  #  build:
  #      dockerfile: ChaosHttpdDocker
  #      context: .
  #  labels:
  #    traefik.enable: "true"
  #    traefik.vaurien.port: 80
  #    traefik.vaurien.frontend.rule: Host:vaurien.docker.localhost
  #    traefik.httpbin.port: 9000
  #    traefik.httpbin.frontend.rule: Host:httpbin.vaurien.docker.localhost

  #proxymuxy:
  #  image: mefellows/muxy
  #  container_name: prometheusnetsample_proxymuxy
  #  restart: unless-stopped
  #  ports:
  #    - "8080:8080"
  #  volumes: 
  #    - ./config:/opt/muxy/conf
  #  privileged: true
  #  networks:
  #      myNetwork:
  #          ipv4_address: 192.168.55.10
  #pumba:
  #  image: gaiaadm/pumba
  #  #networks:
  #  #- myNetwork
  #  volumes:
  #    - /var/run/docker.sock:/var/run/docker.sock
  #  command: "--log-level debug netem --tc-image gaiadocker/iproute2 --duration 10m delay --time 100000 prometheusnetsample_webapi"
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100

  #conntrack_exporter:
  #  image: hiveco/conntrack_exporter:latest
  #  container_name: conntrack_exporter
  #  restart: unless-stopped
  #  cap_add:
  #   - NET_ADMIN
  #  network_mode: "host"
  #  ports:
  #  - "9318:9318"
    #networks:
    #  - myNetwork

  #tc:
  #  image: "${DOCKER_IMAGE_TERMINAL:-lukaszlach/docker-tc}"
  #  container_name: docker-tc
  #  cap_add:
  #    - NET_ADMIN
  #  volumes:
  #    - /var/run/docker.sock:/var/run/docker.sock
  #    - /var/docker-tc:/var/docker-tc
  #  deploy:
  #    mode: global
  #    restart_policy:
  #      condition: any
  #  environment:
  #    HTTP_BIND: "${HTTP_BIND:-127.0.0.1}"
  #    HTTP_PORT: "${HTTP_PORT:-4080}"
  #  network_mode: host

#networks:
#    myNetwork:
#        driver: bridge
#        ipam:
#          driver: default
#          config:
#            - subnet: 192.168.55.0/16
#              gateway: 192.168.55.1
volumes:
    docker_data:

